###########################################################################
# servers: Accept connections from these servers; a comma-separated list
#         of servers; note that "localhost" is always allowed;
#
# Example:
#
#         servers = myhost.mydomain.xyz, myhost2.mydomain.xyz
#
###########################################################################

########################################################################### 
# max_process_time : the length of time (in seconds) that queue will 
#                    wait for a 'shake' child process to complete; if 
#                    the processing time exceeds this amount, the 
#                    child will be killed. This parameter is helpful to
#                    handle situations where shake hangs (e.g., while 
#                    trying to send email) and queue stops processing
#                    new events as a result. The default is 600. The 
#                    value must be >= 0, but should be set generously
#                    enough so that any automatic run has time to 
#                    complete.
#
# Example:
#
#         max_process_time = 300
#
########################################################################### 

########################################################################### 
# old_event_age : do not process events whose origin times are greater than
#                 this long before the present.
# future_event_age : do not process events whose origin times are greater
#                    than this long into the future (should be relatively
#                    short).
# The default is to process all events regardless of age.
#
# The age format is a positive integer followed by a suffix of "y" (years),
# "d" (days), or "m" (minutes).
#
# Example:
#
#       old_event_age = 1y
#       future_event_age = 5m
#
########################################################################### 
old_event_age = 1y
future_event_age = 5m

###########################################################################
# minmag: The minimum magnitude an event must achieve to be processed;
#         the default is 4.0; this value can be overridden if the event
#         falls within one of the "box" regions (specified below)
#
# Example:
#
# minmag = 4.0
#
###########################################################################

###########################################################################
# boxes: "Metro boxes" within which the magnitude "mag" supersedes "minmag" 
#        (above); multiple boxes are allowed; if the boxes overlap, the 
#        first one encountered (in the order they appeear below) will be 
#        used; boxes are optional, the default is to have no metro boxes.
#
#        Statement format:
#
#          box_name = '''mag, lat1, lon1, ... latN, lonN'''
#
#        The last coordinate is assumed to connect to the first. The
#        entire list must be enclosed in triple quotes. The list
#        may be broken onto several lines.
#
# Example:
#
# [boxes]
#     my_box = '''3.5,
#              33.50, -116.75,
#              33.50, -118.25,
#              34.33, -120.25,
#              34.75, -120.25,
#              34.75, -116.75'''
#     my_box2 = '''3.8,
#               34.50, -117.75,
#               34.50, -111.25,
#               34.33, -121.25,
#               34.75, -121.25,
#               34.75, -117.75'''
#
###########################################################################
[boxes]
    01_HV = '''3.5,
         18.3962, -154.4897,
         19.8494, -153.7427,
         22.0856, -156.7969,
         23.3019, -159.8950,
         22.0042, -161.6968,
         20.1385, -159.1040,
         18.3128, -156.3574,
         18.3962, -154.4897'''

    02_AK_1 = '''3.0,
           60.0, -151.0,
           60.0, -149.0,
           62.0, -149.0,
           62.0, -151.0'''

    03_AK_2 = '''4.0,
           59.0, -152.0,
           59.0, -148.0,
           63.0, -148.0,
           63.0, -152.0'''

    04_CI = '''3.5,
         37.4300, -117.7600,
         34.5000, -121.2500,
         31.5000, -118.5000,
         31.5000, -114.0000,
         34.5000, -114.0000,
         37.4300, -117.7600'''

    05_NC = '''3.5,
         34.5000, -121.2500,
         37.4300, -117.7600,
         39.0000, -120.0000,
         42.0000, -120.0000,
         42.0000, -125.0000,
         42.0000, -126.0000,
         40.0000, -126.0000,
         34.5000, -121.2500'''

    06_NN = '''3.0,
         34.5000, -114.0000,
         37.4300, -117.7600,
         39.0000, -120.0000,
         42.0000, -120.0000,
         42.0000, -114.2500,
         36.7500, -114.2500,
         36.7500, -114.0000,
         34.5000, -114.0000'''

    07_UU = '''3.0,
         36.7500, -108.7500,
         36.7500, -114.2500,
         42.5000, -114.2500,
         42.5000, -108.7500,
         36.7500, -108.7500'''

    08_UW = '''3.5,
         43.0200, -125.0000,
         42.0000, -125.0000,
         42.0000, -120.0000,
         42.0000, -117.0000,
         49.0000, -117.0000,
         48.9500, -123.3000,
         48.3000, -123.4000,
         48.5000, -125.0000,
         44.5000, -124.6000,
         43.0200, -125.0000'''

    09_MB = '''3.5,
         45.1667, -110.0000,
         45.1667, -111.3333,
         44.5000, -111.3333,
         44.5000, -113.0000,
         47.9500, -116.0500,
         48.5000, -115.0000,
         48.5000, -113.0000,
         46.0000, -109.5000,
         45.1667, -109.5000,
         45.1667, -110.0000'''

    10_CUS = '''3.5,
          49.0000, -89.8242,
          45.5833, -80.5078,
          47.7541, -72.9492,
          48.6910, -64.5117,
          46.1950, -63.6328,
          37.7186, -69.2578,
          31.5036, -76.6406,
          24.0465, -79.6289,
          24.8466, -96.5918,
          30.4487, -107.7539,
          31.5000, -114.0000,
          31.5000, -118.5000,
          34.5000, -121.2500,
          40.0000, -126.0000,
          42.0000, -126.0000,
          42.0000, -125.0000,
          43.0000, -125.0000,
          44.5000, -124.6000,
          48.5000, -125.0000,
          48.3000, -123.4000,
          48.9500, -123.3000,
          49.0000, -117.0000,
          49.0000, -89.8242'''

    11_DEFAULT = '''5.5,
              80.0, -180.0,
              80.0, 180.0,
              -80.0, 180.0,
              -80.0, -180.0'''

###########################################################################
# repeats: Set up a schedule of re-runs for events of varying sizes; each
#          line has the form:
#
#           min_mag = t1, t2, ... tN
#
#          where the tn's are delays (from the event origin time) at 
#          which events of magnitude greater than or equal to "min_mag" will
#          be re-run; the repeat line with the highest magnitude takes 
#          precedence; the default (i.e. no repeat lines are given) is 
#          to not rerun events; the tn's may take one of the following forms:
#
#            <int>
#            <int>m
#            <int>h
#            <int>d
#            <int>y
#
#       Where '<int>' is a positive integer, no suffix or a suffix
#       of 'm' indicates minutes, a suffix 'h' means hours, a suffix
#       'd' means days, and a suffix of 'y' means years.
#
# Example
# To set up the following schedule:
#
#           0.0 <= Mag  < 4.5       : 15, 30 min
#           4.5 <= Mag  < 6.0       : 5, 15, 30 min
#           6.0 <= Mag  < oo        : 5, 15, 30, 60 min
#
# use:
#
#       [repeats]
#           0.0 = 15, 30
#           4.5 = 5, 15, 30
#           6.0 = 5, 15, 30, 1h
###########################################################################
[repeats]
    0.0 = 1, 2
    5.0 = 1, 2, 3
