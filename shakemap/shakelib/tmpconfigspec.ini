[grind]
###########################################################################
# ampfactor_file: use Borcherdt-style site correction tables
# File containing the Ma and Mv factors for short- and mid-period amps
# as a function of input acceleration in g. the path is relative to 
# $shake_home; lib/sitecorr/Borcherdt94.dat is the default. Old-style
# Borcherdt tables will not work with the new site amplification functions.
# Do not specify an old-style table below unless you run grind with -oldsc.
#
# If the user calls grind with -oldsc, the old-style Borcherdt table MUST
# be specified below, e.g.:
#
#	ampfactor_file = lib/sitecorr/site_corr_cdmg.dat
#
# The structure of the old-style table is very different from the new
# table. See site_corr_cdmg.dat as an example, and src/lib/SiteCorrGrd.pm
# for a more detailed explanation of the structure.
###########################################################################
ampfactor_file = string(default=None)

###########################################################################
# smVs30default: This parameter sets the base site velocity (Vs30) for which 
# the GMPEs will attempt to produce amps. If you are using Borcherdt-style 
# amplifications, it should be set to the velocity of the "rock" site
# class (i.e., the one that generates amplifications of unity (1.0)).
# If you use the GMPEs' native site corrections (i.e., you run grind with
# the -gmpesc flag), this value doesn't really matter much -- it should 
# just be set to something sane, or left alone. The default is 686 (m/s).
###########################################################################
smVs30default = float(min=0,max=1500,default=686)

###########################################################################
# use_gmpe_sc: Has the same effect as calling grind with -nativesc or 
# -gmpesc from the command line. Which is to say that grind will apply
# the site amplification factors as defined by the GMPE (see 'gmpe', below)
# rather than the Borcherdt-style corrections. Calling grind with -gmpesc
# or -nativesc will force the use of GMPE-native site corrections regardless
# of the value set here. There are two acceptable arguments: 'true' and 
# 'false' ('false' is the default).
#
# Example:
#
#	use_gmpe_sc = true
#
###########################################################################
use_gmpe_sc = boolean(default=False)

###########################################################################
# qtm_file
# GMT grd file of site shear velocity (i.e., Vs30); the path is 
# relative to $shake_home; there is no default -- this field is required
# if -qtm is specified
###########################################################################
qtm_file = string(default=None)

###########################################################################
# stavel_file
# File of site shear velocity for seismic stations; the path is 
# relative to $shake_home; there is no default -- if this parameter is not
# defined or if an input station does not appear in this file, station 
# velocities will be taken from the qtm_file above.
#
# The file is a CSV file with the following format (the first four are
# manditory, additional fields are ignored):
#
#	"Latitude","Longitude","Station Code","Vs30"[,...]
#	lat,lon,code,vs30[,...]
#	...
#
# Note that the first line of the file is ignored, and could be blank.
###########################################################################
stavel_file = string(default=None)

###########################################################################
# basin_module specifies the module to use for performing basin depth
# corrections when grind is called with -basement.  This module should
# reside in the Basin subdirectory of the library modules.  The default
# is Field2000.
# Example:
#	basin_module = Field2000
#
###########################################################################
basin_module = string(default='Field2000')

###########################################################################
# basin_file specifies a file to be used for basin depth corrections.
# The file format is (lon, lat, depth) where depth is in meters.  Areas
# outside the limits of the file are assumed to have zero depth.  This
# file is not used unless grind is called with the -basement option.  
# The file path is relative to $shake_home.  The default is 
# $shake_home/lib/sitecorr/basindepths.xy which, in the ShakeMap 
# distribution, covers the Los Angeles basin.  
#
# Example:
#	basin_file = lib/sitecorr/mississippi_basin.xy
#
# Note: the example file does not exist in the distribution.
###########################################################################
basin_file = string(default=None)

###########################################################################
# The grid intervals specify the sample rate of the mapped grid.
# The default is 1.5 arc minutes.
#
# x_grid_interval  = <floating point value>[<units>]
# y_grid_interval  = <floating point value>[<units>]
#
# Where <units> is one of:
#      ' ' => decimal degrees (no unit given)
#	m  => arc minutes
#	c  => arc seconds
#
# e.g.:
#	x_grid_interval	: 30c
#	y_grid_interval	: .5m
#
# sets the x and y grid sizes to 30 arc seconds.
#
# x_grid_interval and y_grid_interval specify the output grid spacing, and
# input grids are resampled as needed.
###########################################################################
x_grid_interval = string(default='1.5m')

###########################################################################
# The grid intervals specify the sample rate of the mapped grid.
# The default is 1.5 arc minutes.
#
# x_grid_interval  = <floating point value>[<units>]
# y_grid_interval  = <floating point value>[<units>]
#
# Where <units> is one of:
#      ' ' => decimal degrees (no unit given)
#	m  => arc minutes
#	c  => arc seconds
#
# e.g.:
#	x_grid_interval	: 30c
#	y_grid_interval	: .5m
#
# sets the x and y grid sizes to 30 arc seconds.
#
# x_grid_interval and y_grid_interval specify the output grid spacing, and
# input grids are resampled as needed.
###########################################################################
y_grid_interval = string(default='1.5m')

###########################################################################
# lonspan specifies the width of the map in degrees of longitude; this 
#   value can be overridden on the command line; the default is 2.5
lonspan = float(min=0.0,max=180.0,default=2.5)

# latspan specifies the height of the map in degrees of latitude; this
#   value can be overridden on the command line; the default value is
#   'llratio * lonspan'
latspan = float(min=0.0,max=90.0,default=None)

# llratio specifies the latspan/lonspan ratio to use when setting latspan
#   when latspan is not specified either here or on the command line; the
#   default is the cosine of the event latitude.  Most regions will want
#   to specify a fixed ratio in order to generate maps of a consistent
#   shape.  Regions that span very large areas of latitude may find
#   it easier to not specify llratio below and let the default system
#   take over.
llratio = float(min=0.0,max=1.0,default=None)

###########################################################################
# bad_station specifies stations to flag as bad under certain circumstances
# the format of the statement is:
#
#	bad_station = code mag start_date-[end_date]
#
# Where 'code' is the station code, 'mag' is the event magnitude cutoff 
# below which the station is considered bad, 'start_date' is the event 
# date to begin applying the cutoff, and 'end_date' is the event date 
# at which the cutoff no longer applies; dates are given in the yyyymmdd
# format, and are UTC (i.e. GMT) dates; a missing end date implys dates 
# inclusive of the current date; multiple 'mag start_date-end_date' groups 
# are allowed, e.g.:
#
#	bad_station = BC3 3.8 19990101-19990407
# bad_station = BC3 2.2 19990407-
#
# In the above example, the station 'BC3' will be flagged as bad for
# events smaller than 3.8 from January 1, 1999 to April 7, 1999 and
# for events smaller than 2.2 from April 7, 1999 to the present.  The
# station will not be flagged for events before January 1, 1999
###########################################################################
bad_station = mixed_list(str,float,str,default=None) #station name, min magnitude, date range

###########################################################################
# gmpe specifies which Ground Motion Prediction Equation (GMPE) to use for 
# particular magnitude ranges. A GMPE is defined by the name of the module 
# that encapsulates its rules.
# 
# The format of the statement is:
#
#	gmpe = gmpe-module min-mag max-mag [depth-min depth-mag]
#
# Where 'gmpe-module' is the name of the module for the GMPE,
# 'min-mag' and 'max-mag' are the minimum and maximum magnitudes
# over which the relation should be used.
#
# For example:
#
#	gmpe = BJF97,0.0,9.9,0,30
#
# In the above example, the module Regression::BJF97 will be used to 
# calculate the gmpe values for events over the magnitude range of 
# 0.0 <= mag < 9.9 and for depths < 30 km.
###########################################################################
gmpe = mixed_list('string','float','float','float','float',default=None) #gmpe minmag maxmag mindepth maxdepth

###########################################################################
# ipe -- Intensity prediction equations.  As 'gmpe,' above, but for intensity.  
# If left unspecified, the default is "DefaultIPE," which uses the GMPE
# and the i2pgm and pgm2i functions to create a virtual IPE (with
# attendent higher uncertainty due to the conversions).  You may also 
# directly specify the use of DefaultIPE with an 'ipe' directive, below.
# 
# Example:
#
#	ipe = AW07_CEUS,0.0,9.9,0,9999
#
# uses the Atkinson-Wald 2007 relationship with coefficients for the
# central and eastern U.S.
###########################################################################
ipe = mixed_list('string','float','float','float','float',default=None) #ipe minmag maxmag mindepth maxdepth

# gmroi -- Radius-of-influence for ground-motion stations ('gm')
# The 'roi' is the distance over which the weight of an observation goes from
# infinity (at the location of the observation) to the shelf or background
# weight (which is equal to the weight of the GMPE).  The spatial correlation 
# function itself is determined by the selection of a function for the 
# sm_nearneighbor program in the src/contour directory. See the ShakeMap
# documentation for more on choosing or defining a spatial correlation 
# function (the default is based on Goda & Atkinson (2010)).
# For example:
#
# 	gmroi = 8k
#	gmdecay = 0.4
#
# would scale the ground-motion weight from oo at the site to the regression
# value at 8km away, then from the regression value to zero at 11.2km
# (i.e., 8k + 0.4 * 8k).  
#
# Default values:
# gmroi    = 10k
# gmdecay  = 0.5
# iroi   = 10k
# idecay = 0.5
gmroi = float(min=0.0,max=10000,default=10)

# iroi -- Radius-of-influence for intensity observations ('i')
# The 'roi' is the distance over which the weight of an observation goes from
# infinity (at the location of the observation) to the shelf or background
# weight (which is equal to the weight of the GMPE).  The spatial correlation 
# function itself is determined by the selection of a function for the 
# sm_nearneighbor program in the src/contour directory. See the ShakeMap
# documentation for more on choosing or defining a spatial correlation 
# function (the default is based on Goda & Atkinson (2010)).
# For example:
#
# 	gmroi = 8k
#	gmdecay = 0.4
#
# would scale the ground-motion weight from oo at the site to the regression
# value at 8km away, then from the regression value to zero at 11.2km
# (i.e., 8k + 0.4 * 8k).  
#
# Default values:
# gmroi    = 10k
# gmdecay  = 0.5
# iroi   = 10k
# idecay = 0.5
iroi = float(min=0.0,max=10000,default=10)

# gmdecay -- the fraction of the gmroi distance over which the weight of the
# observation then decreases from the background value to zero.
# For example:
#
# 	gmroi = 8k
#	gmdecay = 0.4
#
# would scale the ground-motion weight from oo at the site to the regression
# value at 8km away, then from the regression value to zero at 11.2km
# (i.e., 8k + 0.4 * 8k).  
#
# Default values:
# gmroi    = 10k
# gmdecay  = 0.5
# iroi   = 10k
# idecay = 0.5
gmdecay = float(min=0.0,max=1.0,default=0.5)

# idecay -- the fraction of the iroi distance over which the weight of the
# observation then decreases from the background value to zero.
# For example:
#
# 	gmroi = 8k
#	gmdecay = 0.4
#
# would scale the ground-motion weight from oo at the site to the regression
# value at 8km away, then from the regression value to zero at 11.2km
# (i.e., 8k + 0.4 * 8k).  
#
# Default values:
# gmroi    = 10k
# gmdecay  = 0.5
# iroi   = 10k
# idecay = 0.5
idecay = float(min=0.0,max=1.0,default=0.5)

# outlier_deviation_level specifies how many standard deviations define
# an outlier.
# 
# The format of the statement is:
#
#	outlier_deviation_level = level
#
# Where 'level' is the number of standard deviations defining outliers.
# This number can be any positive float. The default is 3.
# Examples:
#
#	outlier_deviation_level = 2
#	outlier_max_mag         = 8.2
outlier_deviation_level = integer(min=0,max=50,default=3)

# outlier_max_mag specifies a magnitude above which the automatic flagging
# of outliers will no longer take place (this cutoff will have no effect
# on manually flagged stations placed in the flagged_stations.txt file in
# the input directory (which always supersedes any automatic flagging);
# the purpose of this parameter is to prevent valid data from being 
# flagged because a long fault rupture might cause stations far from
# the epicenter but close to the rupture to show very high amplitudes;
# the default is 7.0; The format of the statement is:
#
#	outlier_max_mag = magnitude
# Examples:
#
#	outlier_deviation_level = 2
#	outlier_max_mag         = 8.2
outlier_max_mag = float(min=0.0,max=9.9,default=7.0)

# bias parameters: because the attenuation relations are averages of events
# of varying mechanisms, they do no necessarily accurately reflect the
# mechanics of any specific event, nor are we guaranteed that the initial
# earthquake magnitude is accurate.  To overcome these deficiencies, we
# compute a factor by which the predicted ground motions are multiplied
# to bring them in line with the event data.  This factor is computed by
# minimizing the difference between the data values at the seismic stations
# and the estimated values at those locations.  The minimization is in 
# either a least squares sense or an absolute deviation sense.  Because
# there is naturally a lot of scatter in seismic data, the absolute
# deviation (i.e. L1 norm) seems like a better bet and, in fact, has
# proved to be so in practice.
#
# bias_norm: acceptable values are 'l2' (for least squares) or 'l1' (for
#   absolute deviation); the default is 'l1'.
# Example:
#	bias_norm         = l1
bias_norm = option('l1','l2',default='l1')

# bias parameters: because the attenuation relations are averages of events
# of varying mechanisms, they do no necessarily accurately reflect the
# mechanics of any specific event, nor are we guaranteed that the initial
# earthquake magnitude is accurate.  To overcome these deficiencies, we
# compute a factor by which the predicted ground motions are multiplied
# to bring them in line with the event data.  This factor is computed by
# minimizing the difference between the data values at the seismic stations
# and the estimated values at those locations.  The minimization is in 
# either a least squares sense or an absolute deviation sense.  Because
# there is naturally a lot of scatter in seismic data, the absolute
# deviation (i.e. L1 norm) seems like a better bet and, in fact, has
# proved to be so in practice.
#
# bias_max_range: distance (in kilometers) beyond which seismic stations 
#   will be excluded from the bias calculation; this helps to insure that 
#   the bias is computed using the (hopefully) more accurate near-source 
#   data; the default is 120km.
# Example:
#	bias_max_range    = 250
bias_max_range = float(min=0.0,max=1500.0,default=120.0)

# bias parameters: because the attenuation relations are averages of events
# of varying mechanisms, they do no necessarily accurately reflect the
# mechanics of any specific event, nor are we guaranteed that the initial
# earthquake magnitude is accurate.  To overcome these deficiencies, we
# compute a factor by which the predicted ground motions are multiplied
# to bring them in line with the event data.  This factor is computed by
# minimizing the difference between the data values at the seismic stations
# and the estimated values at those locations.  The minimization is in 
# either a least squares sense or an absolute deviation sense.  Because
# there is naturally a lot of scatter in seismic data, the absolute
# deviation (i.e. L1 norm) seems like a better bet and, in fact, has
# proved to be so in practice.
#
# bias_min_stations: sets the minimum number of seismic stations (within the 
#   search radius that are required to compute the bias; fewer than this 
#   number will result in the bias being set to 1.0, and a warning message 
#   being issued; the default is 6.
# Example:
#	bias_min_stations = 6
bias_min_stations = integer(min=0,max=1000,default=6)

# bias parameters: because the attenuation relations are averages of events
# of varying mechanisms, they do no necessarily accurately reflect the
# mechanics of any specific event, nor are we guaranteed that the initial
# earthquake magnitude is accurate.  To overcome these deficiencies, we
# compute a factor by which the predicted ground motions are multiplied
# to bring them in line with the event data.  This factor is computed by
# minimizing the difference between the data values at the seismic stations
# and the estimated values at those locations.  The minimization is in 
# either a least squares sense or an absolute deviation sense.  Because
# there is naturally a lot of scatter in seismic data, the absolute
# deviation (i.e. L1 norm) seems like a better bet and, in fact, has
# proved to be so in practice.
#
# bias_max_mag: earthquake magnitude above which the bias calculation is
#   not performed; this insures (for areas like southern California) that
#   a long fault rupture will not confuse the bias calculation; the default
#   is 7.0.
# Example:
#	bias_max_mag      = 7.0
bias_max_mag = float(min=0.0,max=9.9,default=7.0)

# bias parameters: because the attenuation relations are averages of events
# of varying mechanisms, they do no necessarily accurately reflect the
# mechanics of any specific event, nor are we guaranteed that the initial
# earthquake magnitude is accurate.  To overcome these deficiencies, we
# compute a factor by which the predicted ground motions are multiplied
# to bring them in line with the event data.  This factor is computed by
# minimizing the difference between the data values at the seismic stations
# and the estimated values at those locations.  The minimization is in 
# either a least squares sense or an absolute deviation sense.  Because
# there is naturally a lot of scatter in seismic data, the absolute
# deviation (i.e. L1 norm) seems like a better bet and, in fact, has
# proved to be so in practice.
#
# bias_max_bias: the maximum value that the bias is allowed to take; this
#   is the maximum adjustment (in units of magnitude) that will be allowed
#   when fitting the GMPE or IPE to the station data; the default is 2.0.
# Example:
#	bias_max_bias     = 2.0
bias_max_bias = float(min=0.0,max=9.9,default=2.0)

# bias parameters: because the attenuation relations are averages of events
# of varying mechanisms, they do no necessarily accurately reflect the
# mechanics of any specific event, nor are we guaranteed that the initial
# earthquake magnitude is accurate.  To overcome these deficiencies, we
# compute a factor by which the predicted ground motions are multiplied
# to bring them in line with the event data.  This factor is computed by
# minimizing the difference between the data values at the seismic stations
# and the estimated values at those locations.  The minimization is in 
# either a least squares sense or an absolute deviation sense.  Because
# there is naturally a lot of scatter in seismic data, the absolute
# deviation (i.e. L1 norm) seems like a better bet and, in fact, has
# proved to be so in practice.
#
# bias_min_bias: sets the minimum value the bias can take (must be a 
#   negative number; the default is -2.0.
# Example:
#	bias_min_bias     = -1.5
bias_min_bias = float(min=-9.9,max=0.0,default=-2.0)

# bias parameters: because the attenuation relations are averages of events
# of varying mechanisms, they do no necessarily accurately reflect the
# mechanics of any specific event, nor are we guaranteed that the initial
# earthquake magnitude is accurate.  To overcome these deficiencies, we
# compute a factor by which the predicted ground motions are multiplied
# to bring them in line with the event data.  This factor is computed by
# minimizing the difference between the data values at the seismic stations
# and the estimated values at those locations.  The minimization is in 
# either a least squares sense or an absolute deviation sense.  Because
# there is naturally a lot of scatter in seismic data, the absolute
# deviation (i.e. L1 norm) seems like a better bet and, in fact, has
# proved to be so in practice.
#
# bias_log_amp: 'true' or 'false'  This parameter determines whether
#   the bias is computed against log (base 10) amplitude or linear amplitude
#   The default is 'true', and should generally be left alone.
# Example:
#	bias_log_amp      = true
bias_log_amp = boolean(default=True)

###########################################################################
# direct_patch_size sets the size of sub-faults used when -directivity is
# specified. Units are meters. The default is 1000 (m). The run time of 
# the directivity computations will increase linearly with the number
# of sub-faults, thus decreasing the patch size from 1000 to 500 will
# result in an approximately four-fold increase in the time for the
# directivity computation.
###########################################################################
direct_patch_size = float(min=1.0,max=10000.0,default=1000)

# For scenarios: 
# fwstatlist: Master list of stations for forward modeling (if not specified, 
# uses stavel_file). The file should be a CSV file with the following fields:
#
# latitude,longitude,station_code,vs30,agency,description
#
# The first three are required, the others are optional.
# Example:
#	fwstatlist = lib/sitecorr/ANCH/AKmaster_station.txt
fwstatlist = string(default=None)

# For scenarios: 
# fwdata_file: filename to dump forward estimates
# forward modeling estimate grid intervals and number of grids
#
# Example:
#fwdata_file = forward.xml
fwdata_file = string(default=None)

###########################################################################
# strictbound = Force map to have specific lat/lon boundaries
# The coordinates are 'W S E N'
# For Anchorage = -151.0 60.5 -148.5 62.5
###########################################################################
strictbound = float_list(max=4,default=None)

###########################################################################
# topobin = Run topo2grd or other program to create a "sitecorr.grd"
# file in the event output directory. Subsititution strings are
# <EVID>, <BOUND>, <HOME>
#
# For active tectonic regime:
#   topobin = <HOME>/bin/topo2grd <EVID> <BOUND> regime=active 
#  
# For stable tectonic regime:
#   topobin = <HOME>/bin/topo2grd <EVID> <BOUND> regime=stable
#  
###########################################################################
topobin = string(default=None)

###########################################################################
# mi2pgm = Use the module specified to compute PGM from intensity.
#
# mi2pgm and pgm2mi may be set to the same or different modules (though it isn't clear
# why you would want to use different modules, and would likely produce
# unexpected results).  See the MIFunc modules for details.  
# 'WGRW11' is the default for both.
#
# Example:
#
#	mi2pgm = Wald99
#
# uses the Wald, et al., 1999 MMI relationship for converting MMI to PGM 
###########################################################################
mi2pgm = string(default='WGRW11') #should this be an option?

###########################################################################
# pgm2mi = Use the module specified to compute intensity from PGM.  
#
# mi2pgm and pgm2mi may be set to the same or different modules (though it isn't clear
# why you would want to use different modules, and would likely produce
# unexpected results).  See the MIFunc modules for details.  
# 'WGRW11' is the default for both.
#
# Example:
#
#	pgm2mi = AK07
#
# uses the Atkinson & Kaka 2007 relationship to convert PGM to MMI.
###########################################################################
pgm2mi = string(default='WGRW11') #should this be an option?

########################################################################
# source_network is the ANSS or other network designation that will
# appear in grid.xml as the attribute 'shakemap_originator' in 
# the 'shakemap_grid' tag. The default is 'us'. 
#
# Example:
#
#       source_network = ci
#
########################################################################
source_network = string(default=None)

[mapping]
###########################################################################
# organization
# Specify the name of the map-producing organization for inclusion in
# map titles; don't get carried away here, there isn't much room; statement
# format is:
#
#	organization = Name of Organization
#
# Example:
#
#	organization = USGS
#
###########################################################################
organization = string(default='ORG')

###########################################################################
# measure_unit specifies the units of the various "size" parameters in 
# this file*.  The acceptable values are 'inch' or 'cm'.  Note that the
# program 'mapping' uses centimeters interally, and sets the user's 
# gmtdefaults MEASURE_UNIT parameter to 'cm' in the execution directory.
#
# Most of the sizes of things in this file are currently specified in
# inches, so it may be easiest to specify measure_unit as "inch". The
# alternative would be to use "cm" and convert the values in this file
# from inches to centimeters.  Centimeter values for most parameters are
# provided within the comment body describing the parameter.
#
# *See, for example, network_color, city_dot_size, width, tvwidth, etc.
###########################################################################
measure_unit = option('inch','cm',default='inch')

###########################################################################
# mi_?res specify the spatial resolution of the mi grid; these values
# MUST be set to the same resolution as the standard topography;
# mi_?hires specify the spatial resolution of the mi grid when the
# "-hires" option is used; the values MUST be set to the same resolution
# as the high-resolution topography (if high-resolution topography is used).
# The hires values are only important if mapping is run with -hires.
# The statement format is:
#
# mi_xres   = <floating point value><units>
# mi_yres   = <floating point value><units>
# mi_xhires = <floating point value><units>
# mi_yhires = <floating point value><units>
#
# Where <units> is one of:
#	' ' => degrees (i.e. no units specified)
#	'm' => minutes
#	'c' => seconds
#
# e.g.:
#	mi_xres   = 0.5m
#	mi_yres   = 0.5m
#	mi_xhires = 0.05m
#	mi_yhires = 0.05m
#
# The default value is '30c' for low-resolution and 3c for high-resolution.
###########################################################################
mi_xres	= string(default='30c')
mi_yres	= string(default='30c')
mi_xhires	= string(default='3c')
mi_yhires	= string(default='3c')

###########################################################################
# network_color specifies the fill color of the stations plotted on the
# maps based on the source network.  The color codes are defined in
# colors.conf.  The default is yellow.  Statement format:
#
#	network_color = <network_code> <color code> [<symbol> [<size>]]
#
# The network code is the official two-character network code 
# assigned to the source network and is given by the "netid" attribute
# of the "station" tag in the input XML. The symbol is the symbol code
# given to the GMT program 'psxy' via the -S option.  See the psxy man
# page for information on the allowable symbols (but common ones are:
# a = star, c = circle, d = diamond, s = square, t = triangle, x = cross).
# The default symbol is 't' (triangle).  Size is the size of the symbol as 
# defined by psxy. The default size is given by the station_size parameter 
# elsewhere in this file, and defaults to 0.12.
#
# Example:
#
#	network_color = CE blue t 0.12
#
# This parameter is intended to replace "station_color" (see below), 
# however both are still used to facilitate the transition.  
# network_color is used preferentially over station_color
# Known networks:
#	CI	SCSN
#	CE	CGS/CSMIP
#	AZ	ANZA
#	NP	NSMP
#	NC	NCSN
#	BK	Berkeley
#	NN	Nevada
#	XP	Tremor
#	PG	PG&E
#	HI	Historic
#	UK	Unknown
#	US	US National Network
#
# In centimeters:
#network_color   = CI red t 0.305
#network_color   = CE blue t 0.305
#network_color   = AZ yellow t 0.305
#network_color   = NP green t 0.305
#network_color	= NC orange t 0.305
#network_color	= BK turquoise t 0.305
#network_color   = NN darkblue t 0.305
#network_color   = XP darkgreen t 0.305
#network_color   = PG magenta t 0.305
#network_color   = HI green t 0.305
#network_color   = UK grey t 0.305
#network_color   = US darkred t 0.305
#network_color   = CIIM darkblue c 0.153
#network_color   = DYFI darkblue c 0.153
#network_color   = MMI darkblue c 0.153
###########################################################################
network_color   = CI red t 0.12
network_color   = CE blue t 0.12
network_color   = AZ yellow t 0.12
network_color   = NP green t 0.12
network_color	= NC orange t 0.12
network_color	= BK turquoise t 0.12
network_color   = NN darkblue t 0.12
network_color   = XP darkgreen t 0.12
network_color   = PG magenta t 0.12
network_color   = HI green t 0.12
network_color   = UK grey t 0.12
network_color   = US darkred t 0.12
network_color   = CIIM darkblue c 0.06
network_color   = DYFI darkblue c 0.06
network_color   = INTENSITY darkblue c 0.06
network_color   = MMI darkblue c 0.06
network_color   = UU darkblue t 0.12
network_color   = KNET darkred t 0.12
network_color   = KIK red t 0.12
network_color   = TW green t 0.12
network_color   = CU yellow t 0.12 
network_color   = NCSN turquoise t 0.12
network_color   = NEIC green t 0.12
network_color   = NZ green t 0.12
network_color   = GNS green t 0.12
network_color   = IU green t 0.12
network_color   = G green t 0.12
network_color   = TA green t 0.12
network_color   = WY green t 0.12
network_color   = IW green t 0.12
network_color   = IM green t 0.12
network_color   = JP green t 0.12
network_color   = INII_UCR green t 0.12
network_color   = ISMN green t 0.12

###########################################################################
# station_color specifies the fill color of the stations plotted on the
# maps based on the source network. The color codes are defined in 
# colors.conf. The default is yellow.  Statement format:
#
#	station_color = <color code> <network>
#
# where <network> specifies the data source from the stationlist.dtd, and
# <color code> specifies the color code from colors.conf.  The network
# should be the exact string found in the 'source' attribute of the input
# XML file (e.g. "SCSN and Trinet" or "ANZA Regional Network").
#
# NOTE: This parameter is now deprecated.  network_color should be used
# instead.
# station_color   = red SCSN and TriNet
# station_color   = red SCSN
# station_color   = blue CDMG
# station_color   = blue CGS
# station_color   = blue California Strong Motion Instrumentation Program
# station_color   = yellow ANZA Regional Network
# station_color   = green NSMP
# station_color   = green United States National Strong-Motion Instrumentation Network
# station_color   = green United States National Strong-Motion Network
# station_color   = green HIST
###########################################################################


###########################################################################
# station_symbol -- specifies the symbol used to identify seismic stations
# on the maps if they are not specified by network_color statements; See
# the manual page for the GMT command 'psxy' for allowable values; the
# default is 't' (for triangle).
#
# station_size -- specifies the size of the station symbols on the maps 
# (in units defined by measure_unit, above) if they are not specified by 
# network_color statements; the default is 0.12 (inch).
#
# Statement format:
#
#	station_symbol = <symbol_character>
#	station_size   = <size in inches>
#
# In centimeters:
# station_size 	= 0.305
###########################################################################
station_symbol 	= t
station_size 	= 0.12

###########################################################################
# contour_color specifies the color of the PGA/PGV contours on the maps;
#   the default is yellow
# ncontours is the approximate number of contours on the contour plots
# contour_width specifies the width of the PGA/PGV contours (default 8)
# highway_color specifies the color of the highways (default darkgrey)
# highway_width specifies the width of the highways (default 8)
# fault_color specifies the color of the faults (default darkred)
# fault_width specifies the width of the faults (default 8)
# border_width specifies the width of the state/national/coastal 
#   borders (default 8)
# water_color specifies the color of the wet areas (default lightblue)
# epicenter_color specifies the fill color of the star (black outline)
#   that marks the epicenter (default is for an unfilled star)
# epicenter_size determines the size of the star that represents the
#   earthquake epicenter, in inches
# main_title_size is the font size of the main title at the top of the plots
# sub_title_size is the font size of the subtitle at the top of the plots
# city_dot_size specifies the size, in inches, of the dot marking the
#   locations of cities
# city_name_size: point size of the font used to label cities (this
#   parameter is overridden if the *_label versions of the city files
#   are used (see elsewhere in this config for an explanation of the _label
#   versions of the city name files)
# tv_* are the equivalent of the non-tv parameters above, but are used
#   to configure the TV map
#
#       contour_color     = <color code>
#	ncontours	  = <number of contours>
#	contour_width     = <line width>
#	highway_color     = <color code>
#	highway_width     = <line width>
#	fault_color       = <color code>
#	fault_width       = <line width>
#	border_width      = <line width>
#	water_color       = <color code>
#	epicenter_color   = <color code>
#	epicenter_size    = <symbol size in inches>
#	main_title_size   = <font point size>
#	sub_title_size    = <font point size>
#	city_dot_size	  = <symbol size in inches>
#	city_name_size    = <font point size>
#	tv_highway_width  = <line width>
#	tv_highway_color  = <color code>
#	tv_border_width   = <line width>
#	tv_city_dot_size  = <symbol size in inches>
#
# where <color code> specifies a color code defined in colors.conf.
#
# In centimeters:
#epicenter_size	  = 0.762
#city_dot_size	  = 0.203
#tv_city_dot_size  = 0.203
###########################################################################
contour_color	  = white
ncontours	  = 8
contour_width	  = 5
highway_color	  = lightgrey
highway_width	  = 6
fault_color	  = darkred
fault_width	  = 4
border_width	  = 5
water_color	  = lightblue
epicenter_size	  = 0.30
main_title_size   = 15
sub_title_size    = 12
city_dot_size	  = 0.08
city_name_size    = 9
tv_highway_width  = 8
tv_highway_color  = lightgrey
tv_border_width   = 10
tv_city_dot_size  = 0.08

###########################################################################
# ff_width/ff_color specify the width and color of the finite fault (when
# one is supplied in the input directory.  ff_width is given in points,
# ff_color is one of the colors given in color.conf.  The defaults are:
# ff_width (12), ff_color (darkgrey).
#
# Example:
#
#	ff_width = 9
#	ff_color = black
#
###########################################################################
ff_width = 12
ff_color = darkgrey

###########################################################################
# xorig/yorig specify the position of the lower left corner of the maps, 
# effectively specifying the left and bottom margins of the plots.
# Statement format:
#
#	xorig = <position>
#	yorig = <position>
#
# Where <position> is given in inches; the default is 1.0 (inches) for both
# xorig and yorig
#
# In centimeters:
#xorig		= 2.54
#yorig		= 2.54
###########################################################################
xorig		= 1.0
yorig		= 1.0

###########################################################################
# width specifies the width of the maps.
# tvwidth specifies the width of the tvmaps.
# The units are given by the "measure_unit" parameter, above.
# Statement format:
#
#	width   = <width>
#	tvwidth = <width>
#
# The default is 6.5 inches (16.51 cm) for the normal maps, 10.0 inches
# (25.4 cm) for the tvmaps.
# Note: the height of the map will be determined by the width, lonspan, 
# latspan and the projection used; the value for any given map can be
# found in the <shake_home>/data/<event_id>/mapping directory in the
# file "geometry_map.txt"
#
# In centimeters:
#width		= 16.51c
#tvwidth	= 25.4c
###########################################################################
width		= 6.5
tvwidth		= 10.0

###########################################################################
# map_axes specifies the format for the plotting and annotation of the
# the axes on the maps.
# Statement format:
#
#	map_axes = <string>
#
# Where <string> is the string to be given as the argument to the -B
# flag of the GMT psbasemap command; the default is 'a60mf30mWSen'.
###########################################################################
map_axes	= a60mf30m/a30mf30mWSen

###########################################################################
# map_data_dir: A directory in which one may store various map files; this
# entry is only used to substitute for the "<MAP_DIR>" string in config
# statements below; the string "<SHAKE_HOME>" in the value portion of this
# statement will be replaced with the path of the ShakeMap installation;
# this statement is not required and will default to <shake_home/lib/mapping
# the statement has the form:
#
#	map_data_dir = <path>
#
###########################################################################
map_data_dir	= <SHAKE_HOME>/lib/mapping

###########################################################################
# topo_cmap, ii_cmap, ii_tvmap_cmap: GMT colormaps used for topography,
# the instrumental intensity map, and the TV version of the instrumental 
# intensity map, respectively; these entries are required, though they 
# could be empty files if you do not plot topography or II or the TV map, 
# respectively; the statements have the form:
#
#	topo_cmap     = <path>
#	ii_cmap       = <path>
#	ii_tvmap_cmap = <path>
#
# sd_cmap is the GMT colormap used for the uncertainty (standard
# deviation) maps.  It uses the same form as the other statements:
#
#	sd_cmap	      = <path>
#
# If path contains the string "<MAP_DIR>", it will be replaced with the
# path given by map_data_dir (see above)
###########################################################################
topo_cmap	= <MAP_DIR>/tan.cpt
ii_cmap  	= <MAP_DIR>/Ii.cpt
ii_tvmap_cmap  	= <MAP_DIR>/Ii_ntsc.cpt
sd_cmap         = <MAP_DIR>/sd.cpt

###########################################################################
# Map statements; if omitted, the corresponding feature will not be plotted;
# see the mapping program for file format documentation and the southern 
# California files supplied with the distribution for examples of these
# files; the statements are:
#
#	map_roads           = <path>
#	map_faults          = <path>
#	map_cities          = <path>
#	map_cities_label    = <path>
#	map_topo            = <path>
#	map_topo_hires      = <path>
#	map_intensity       = <path>
#	map_intensity_hires = <path>
#
# map_topo is the normal GMT (.grd) topography file; 
# map_topo_hires is the high-resolution topography used by the -hires 
#  option -- specifying the high-resolution topography files is not 
#  necessary unless mapping is run with -hires.  Many regions use the
#  resolution topography by default and therefore do not need to specify
#  this parameter; 
# map_intensity is an optional file that contains the pre-computed 
#  topographic intensity from the map_topo file; if map_intensity is 
#  omitted or does not exist, the intensity will be computed using 
#  grdgradient with the options -A325 -Nt; if the file is specified but 
#  does not exist, it will be written to the specified location, otherwise 
#  it will be "<MAP_DIR>/intensity.grd"; the same holds for 
#  map_intensity_hires, but if unspecified it will be written to 
#  "<MAP_DIR>/intensity_hires.grd"; if this is going to happen,
#  make sure that the user running mapping has permission to write in 
#  these directories.
#
# map_cities consists of three space-separated columns: lon, lat, and 
#  city name (multiple word names are supported).  If the city name is 
#  followed with a '#', the city is not plotted on the map.  If map_cities
#  is used, the city name will be centered above the dot representing
#  the city.  The bottom of the city name text will be 0.02 degrees
#  above the dot.
#
# map_cities_label allows for greater control of the placement and style
#  of the city name as it appears on the plot.  If map_cities_label is 
#  defined, it will be used in preference to map_cities.  The file specified 
#  by map_cities_label has nine columns:
#	latitude		: the latitude of the city
#	label_lat_offset	: the latitude offset of the label from
#				  the city location (relative to "justify")
#	longitude		: the longitude of the city
#	label_lon_offset	: the longitude offset of the label from
#				  the city location (relative to "justify")
#	font_size		: the text font size as defined by pstext
#	angle			: the text angle as defined by pstext
#	font			: the text font as defined by pstext
#	justify			: the text justification as defined by pstext
#	city_name		: the name of the city
#  As with map_cities, if the city name is followed by a '#' the city
#  will be omitted.  See the GMT documentation for 'pstext' for an
#  explanation of the various fields.  The _label form of map_cities
#  is now perferred.
#
# If a path contains the string "<MAP_DIR>", it will be replaced with the
# path given by map_data_dir (see above)
#
# map_cities_on_pgm can be "true" or "false" (default is "false") and 
#  determines whether or not the cities are plotted on the PGM maps 
#  (pga, pgv, psa??) as well as the MMI map.
# 
###########################################################################
map_roads	    = <MAP_DIR>/ca_roads.xy
map_faults          = <MAP_DIR>/global_faults.txt
map_cities_label    = <MAP_DIR>/us_cities.txt
map_cities_on_pgm   = false

###########################################################################
# big_cities: a list of large cities suitable for the TV map
# very_big_cities: a list of very large cities suitable for the TV map
#                  at large scales
#
# big_cities_label and very_big_cities_label are also supported.  See
# the discussion of map_cities_label, above, for the file format.
# As with big_cities_label, the _label versions of these parameters
# are now preferred.
###########################################################################
big_cities		= dummy
big_cities_label	= <MAP_DIR>/ca_bigcities_label.txt
very_big_cities		= dummy
very_big_cities_label	= <MAP_DIR>/ca_verybigcities_label.txt

###########################################################################
# use_gmt_coast: determines whether or not the gmt command 'pscoast' is
# used to draw the coastline and fill in the areas covered by water;
# valid values are 'true' or 'false'; the default is 'true';
#
# Example:
#
#	use_gmt_coast = false
#
###########################################################################
use_gmt_coast = true 

###########################################################################
# gmt_border_level: By default, mapping uses pscoast to draw political
# boundaries using -N2 (see the pscoast manual page for more details),
# however for some countries this results in many unwanted regional
# boundaries. This parameter may be set to '1' (the number one) for 
# national boundaries only, '2' (the default) for national boundaries
# plus state boundaries in the Americas, '3' for marine boundaries only,
# or 'a' for all boundaries. Most users will ignore this parameter and
# allow the default to apply.
#
# Example:
#
#	gmt_border_level = 1
#
# will instruct pscoast to use -N1 instead of -N2.
###########################################################################

###########################################################################
# These parameters allow some customization of the intensity plot:
#  faults_on_mi determines whether or not the mapped fault traces will
#    be plotted (the default is 'false')
#  stations_on_mi determines whether or not open triangles are plotted
#    at the locations of the seismic stations (the default is 'true')
#  filled_stations_on_mi determines whether or not filled triangles are 
#    plotted at the locations of the seismic stations (the default is 'false')
#
#	faults_on_mi          = <true | false>
#	stations_on_mi        = <true | false>
#	filled_stations_on_mi = <true | false>
###########################################################################
faults_on_mi		= true
stations_on_mi		= true
filled_stations_on_mi 	= false

###########################################################################
# psxy_addon: allows for customized overlays by providing the user with
# access to the GMT psxy command.  Multiple psxy_addon lines are supported,
# and run in the order they appear.  psxy is run with the generic options
# needed by ShakeMap (setting the map boundaries, -O -K, etc.).  The 
# arguments to this option consist of a file name (the file is expected to
# reside in the "map_data_dir", see above), followed by any special flags
# that the user finds appropriate for psxy.  The file is expected to be
# in a format that psxy will understand.  The layers are added on top of
# the pscoast layer.  The default is to do nothing.
#
# Note: between GMT Version 4.4 and 4.5 the option -M was changed to -m.
# While code that uses -M will still work under 4.5, a warning will be 
# emitted, and such code is not guaranteed to work in the future.  Please
# remember to update these commands when/if you upgrade your GMT. (The
# remainder of the ShakeMap code is sensitive to this change -- you need 
# only specify your GMT version in your <shake_home>/include/macros file).
#
# For example the California ShakeMap groups set 'use_gmt_coast'
# to false, and use these lines to draw their water boundaries:
#
#	psxy_addon = line_cal_coast.xy -M -G120/160/220
#	psxy_addon = line_cal_ow_streams.xy -M -W1/100/140/200
#	psxy_addon = line_cal_lakes.xy -M -G120/160/220 -W1/100/140/200
#	psxy_addon = line_cal_drylakes.xy -M -W2/100/140/200
#	psxy_addon = line_cal_islands.xy -M -W1/140/180/240
#	psxy_addon = line_usa_west_borders.xy -M -W4/0/0/100
#
###########################################################################

###########################################################################
# pstext_addon: allows for customized overlays by providing the user with
# access to the GMT pstext command.  Multiple pstext_addon lines are supported,
# and run in the order they appear.  pstext is run with the generic options
# needed by ShakeMap (setting the map boundaries, -O -K, etc.).  The 
# arguments to this option consist of a file name (the file is expected to
# reside in the "map_data_dir", see above), followed by any special flags
# that the user finds appropriate for pstext.  The file is expected to be
# in a format that pstext will understand.  The layers are added on top of
# the layer that prints city names.  The default is to do nothing.
#
# Example:
#
#	pstext_addon = fault_names.txt
#
###########################################################################

###########################################################################
# noscenariosplash: option to turn off 'Scenario' sign on scenario maps
###########################################################################
noscenariosplash = false

###########################################################################
# tvguide: specify the name of the template file from with the "tvguide.txt"
# output file will be generated.  This file should be located in 
# <shake_home>/lib/mapping and be based on "tvguide.txt" (which is also
# the default).  This parameter allows the operator to specify a different,
# custom file with a unique name that won't be overwritten when upgrading 
# the system.
#
# Example:
#
#	tvguide = my_local_tvguide.txt
#
###########################################################################
